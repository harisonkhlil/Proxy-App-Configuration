[general]
# resource_parser_url 示例可以在以下网站找到 https://raw.githubusercontent.com/crossutility/Quantumult-X/master/resource-parser.js
resource_parser_url=https://cdn.jsdelivr.net/gh/KOP-XIAO/QuantumultX@master/Scripts/resource-parser.js
;geo_location_checker=http://www.example.com/json/, https://www.example.com/script.js
# Quantumult 使用 HEAD 方法将 HTTP 请求发送到服务器检查 url 来测试代理的状态，结果应该是两个延迟，第一个是 TCP 与代理服务器的握手，第二个是 Quantumult 成功地从服务器检查 url 接收 HTTP 响应的总时间。闪电图标表示 TCP Fast Open 成功。如果 [server_local] 或 [server_remote] 中的服务器有自己的 server_check_url，则会用自己的 server_check_url 代替 [general] 中的 server_check_url。
# Quantumult 使用 HTTP HEAD 方法对测试网址 server_check_url 进行网页响应性测试(测试结果为通过该节点访问此网页获得 HTTP 响应所需要的时间)，来确认节点的可用性。
# Quantumult 界面中的延迟测试方式均为网页响应性测试，显示的最终延迟均为通过对应节点访问测试网页获得 HTTP 响应所需要时间。
# 由于 Trojan 协议为无响应校验协议，使得 HTTP 检测方式即使获得了 HTTP 响应，也不代表节点一定可用。
server_check_url=http://cp.cloudflare.com/generate_204

# DNS 排除列表
# dns_exclusion_list 包含了禁用占位符 IP (240.*) 的域，不在 dns_exclusion_list 中的域都启用了占位符 IP，并打开了 resolve-on-remote 设置。
dns_exclusion_list=*.cmpassport.com, *.jegotrip.com.cn, *.icitymobile.mobi, id6.me, *.pingan.com.cn, *.cmbchina.com

# Quantumult 将不会处理到 excluded_routes 的流量。修改后最好重新启动您的设备。
;excluded_routes=192.168.0.0/16, 172.16.0.0/12, 100.64.0.0/10, 10.0.0.0/8
# Hearthstone: 24.105.30.129/32, 185.60.112.157/32, 185.60.112.158/32, 182.162.132.1/32
excluded_routes=239.255.255.250/32, 24.105.30.129/32, 185.60.112.157/32, 185.60.112.158/32, 182.162.132.1/32

# 在网络环境切换时出发运行模式变更
# filter - 规则分流，all_proxy - 全部代理，all_direct - 全部直连
# 示例意思：[蜂窝数据],[Wi-Fi],[SSID]
# 下列示例的意思为：在蜂窝数据使用规则分流(第一个 filter)，在 Wi-Fi 使用规则分流(第二个 filter)，在 SSID 为 LINK_22E171 的 Wi-Fi 使用全部代理，，在 SSID 为 LINK_22E172 的 Wi-Fi 使用全部直连
# Rewrite 及 Task 模块始终生效
;running_mode_trigger=filter, filter, LINK_22E171:all_proxy, LINK_22E172:all_direct

# 在特定 SSID 网络时(除了 Task 模块)暂停 Quantumult X
;ssid_suspended_list=LINK_22E174, LINK_22E175

# 参数 udp_whitelist 从 IP 层控制 UDP 数据是否需要舍弃；如舍弃，则该 UDP 请求不会进入规则模块以及策略模块，TCP/UDP 请求记录中也不会有相应的条目，但仍可在日志中查询到相关信息（日志等级 debug）。
# 该参数控制的是流入 Quantumult X Tunnel 的请求，并非 Quantumult X Tunnel 发出的请求，即不会作用于节点所使用的 UDP 目标端口。
# udp_whitelist=53, 123, 1900, 80-443

# 说明：参数 fallback_udp_policy 的值仅支持末端策略（末端策略为经由规则模块和策略模块后所命中的策略，例如：direct、reject 以及节点；不支持内置策略 proxy 以及其它自定义策略）。默认为 reject。
# 当 UDP 请求经过规则模块以及策略模块后所命中的节点为 Quantumult X 所不支持 UDP 转发的节点（如：VMess、trojan），或支持 UDP 转发但未注明 udp-relay=true 的（例如：SS/SSR 且与服务器是否真实开启 UDP 转发无关），则 fallback_udp_policy 会被使用。
# 注意：如果您需要调整该参数的值为 direct，请务必清楚了解同一目标主机名 TCP 请求与 UDP 请求的源地址不同所造成的隐私及安全风险。
fallback_udp_policy=direct
;icmp_auto_reply=true

[dns]
# 查询结果只用于评估过滤器或通过直接策略连接，当通过服务器连接时，查询结果不会被使用，Quantumult 永远不会知道相关域名的目标 IP。
# 如果您想让某个域名(例如：example.com)为 127.0.0.0.1，只需在「filter_local」部分添加「host, example.com, reject」即可。拒绝操作将返回 127.0.0.0.1 的 DNS 响应。

# 禁用系统 DNS
# 为了提高性能，会使用从当前网络(系统)中获取的 DNS 服务器(您可以使用「no-system」禁用此功能，但至少要增加一个自定义的DNS服务器，如「server=223.5.5.5」)。
no-system
doh-server=https://dns.alidns.com/dns-query
server=223.5.5.5
# 禁用 IPv6
# 当设置「no-ipv6」时，Quanumult X Tunnel 的 DNS 模块会直接让 AAAA 查询失败。
no-ipv6
# 自定义 DNS
# > DNSPod Public DNS
# > Alibaba Public DNS
# server=223.5.5.5
# 本地 DNS 映射
# Firebase Cloud Messaging
# address=/mtalk.google.com/108.177.125.188
# Google Dl
# server=/dl.google.com/119.29.29.29
# server=/dl.l.google.com/119.29.29.29

;server=8.8.4.4:53
;server=/example0.com/system
;server=/example1.com/8.8.4.4
;server=/*.example2.com/223.5.5.5
;server=/example4.com/[2001:4860:4860::8888]:53
;address=/example5.com/192.168.16.18
;address=/example6.com/[2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3]


[policy]
# 全球加速
static=🇺🇳Global, 🇭🇰Hong Kong, 🇸🇬Singapore, 🇨🇳Taiwan, 🇺🇸United States, 🇯🇵Japan, 🇰🇷Korea, 专线🏆, ✈️冷门, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Global.png
# 黑白名单
static=Final, proxy, direct, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Final.png
# 中国直连
static=🇨🇳Inbound, direct, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/China.png
# 国外流媒体
static=Streaming, 🇭🇰Hong Kong, 🇨🇳Taiwan, 🇸🇬Singapore, 🇺🇸United States, 🇯🇵Japan, 🇰🇷Korea, 专线🏆, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Streaming.png
# 国内流媒体
static=StreamingSE, direct, 🇨🇳Taiwan, 🇭🇰Hong Kong, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/StreamingCN.png
# 广告，隐私，劫持拦截
static=Guard, reject, img-url=https://cdn.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Advertising.png
# 苹果更新
static=Apple Update, direct, reject, img-url=https://cdn.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Apple_Update.png
# YouTube分流
static=YouTube, 🇭🇰Hong Kong, 🇸🇬Singapore, 🇨🇳Taiwan, 🇯🇵Japan, 🇰🇷Korea, 🇺🇸United States, ✈️冷门, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/YouTube.png
# 哔哩哔哩分流
static=BiliBili, direct, 🇭🇰Hong Kong, 🇨🇳Taiwan, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Bili.png
# 奈菲分流
static=Netflix, 🇺🇸United States, 🇯🇵Japan, 🇰🇷Korea, 🇨🇳Taiwan, 🇸🇬Singapore, 🇭🇰Hong Kong, ✈️冷门, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Netflix.png
# 动画疯分流
static=Bahamut, 🇨🇳Taiwan, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Bahamut.png
# tiktok分流
static=TikTok, direct, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/TikTok.png
# Facebook分流（建议用纯净节点养号）
static=Facebook, direct, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Facebook.png
# 速度测试分流
static=Speedtest, direct, proxy, reject, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Speedtest.png
# 网易云灰色歌曲解锁
static=NetEaseMusic, direct, 解锁灰色0, 网易云解锁灰色1, 网易云解锁灰色2, 网易云解锁灰色3, 网易云解锁灰色4, 网易云解锁灰色5, 网易云解锁灰色6, 网易云解锁灰色7, 网易云解锁灰色8, 网易云9, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Netease.png
# 机场专线
static=专线🏆, server-tag-regex=(手游|游戏|专线|(?i)IPLC|IEPL|game), img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/GAME.png
# 冷门节点（用来薅羊毛）
static=✈️冷门, direct , img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/XD.png
# 香港策略
static=🇭🇰Hong Kong, server-tag-regex=(?=.*(香港|HK|(?i)Hong))^((?!(专线|手游|游戏|(?i)IPLC|IEPL|game)).)*$, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
# 新加坡策略
static=🇸🇬Singapore, server-tag-regex=(?=.*(新加坡|狮城|SG|(?i)Singapore))^((?!(专线|手游|游戏|(?i)IPLC|IEPL|game)).)*$, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png
# 台湾策略
static=🇨🇳Taiwan, server-tag-regex=(?=.*(台湾|台灣|TW|(?i)Taiwan))^((?!(专线|手游|游戏|(?i)IPLC|IEPL|game)).)*$, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png
# 日本策略
static=🇯🇵Japan, server-tag-regex=(?=.*(日本|JP|(?i)Japan))^((?!(专线|手游|游戏|(?i)IPLC|IEPL|game)).)*$, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png
# 韩国策略
static=🇰🇷Korea, server-tag-regex=(?=.*(韩国|韓國|南朝鲜|KR|(?i)Korean))^((?!(专线|手游|游戏|(?i)IPLC|IEPL|game)).)*$, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/KR.png
# 美国策略
static=🇺🇸United States, server-tag-regex=(?=.*(美国|美國|US|(?i)States|American))^((?!(专线|手游|游戏|网易云|云音乐|🎶(?i)IPLC|IEPL|game|music|𝐌𝐮𝐬𝐢𝐜|Unbolck|Music|Netease)).)*$, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png

[server_remote]
https://qxzy.top/rules/QuantumultX/gz/wyy.list,  tag=NetEaseMuSic, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Netease_Music.png, update-interval=86400, opt-parser=true, enabled=true
# 建议在UI先填入你的机场订阅然后在UI选择你需要的策略节点然后开始更新
# 参数「tag」和「enabled」是可选的。
# 各种远程资源的默认同步时间间隔是 86400 秒。
# 你可以设置 update-interval=172800 来自定义你的自动同步时间间隔(秒)，负数表示禁用自动同步。

[filter_remote]
# 分流优先级：从上到下

# 苹果更新屏蔽
https://raw.githubusercontent.com/harisonkhlil/QurakJkaer-s-conf/main/AppleUpdate.list, tag=更新屏蔽, force-policy=Apple Update, update-interval=172800, opt-parser=true, enabled=true
# YouTube分流
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/YouTube/YouTube.list, tag=YouTube, force-policy=YouTube, update-interval=172800, opt-parser=false, enabled=true
# 奈菲分流
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Netflix/Netflix.list, tag=Netflix（奈非）, force-policy=Netflix, update-interval=172800, opt-parser=false, enabled=true
# 毒奶去广告
https://limbopro.xyz/Adblock4limbo.list, tag=DumuikAds, force-policy=Guard, update-interval=172800, opt-parser=false, enabled=true
# 网易云分流
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/NetEaseMusic/NetEaseMusic.list, tag=NetEaseMusic, force-policy=NetEaseMusic, update-interval=172800, opt-parser=false, enabled=true
# Facebook（建议用纯净节点养号）
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Facebook/Facebook.list, tag=Facebook, force-policy=Facebook, update-interval=172800, opt-parser=false, enabled=true
# 动画疯分流
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Bahamut/Bahamut.list, tag=Bahamut, force-policy=Bahamut, update-interval=172800, opt-parser=false, enabled=true
# 哔哩哔哩分流
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/BiliBili/BiliBili.list, tag=BiliBili, force-policy=BiliBili, update-interval=172800, opt-parser=false, enabled=true
# tiktok分流
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/TikTok/TikTok.list, tag=Tiktok, force-policy=TikTok, update-interval=172800, opt-parser=false, enabled=true
# 速度测试分流
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Speedtest/Speedtest.list, tag=SpeedTest, force-policy=Speedtest, update-interval=172800, opt-parser=false, enabled=true
#
# 参数「tag」、「force-policy」和「enabled」是可选的。
# 当有强制策略时，远程资源的过滤器中的策略将被忽略，并使用强制策略。
#

# Unbreak 后续规则修正
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Unbreak.list, tag=🔂Unbreak, force-policy=direct, update-interval=86400, opt-parser=true, enabled=true

# # Privacy 隐私
# Hijacking 运营商劫持或恶意网站
# Advertising 广告三个合在一起
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Advertising.list, tag=🛡Advertising, force-policy=Guard, update-interval=86400, opt-parser=true, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/AdvertisingPlus.list#type=domain-set, tag=🛡Advertising+, force-policy=Guard, update-interval=86400, opt-parser=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Advertising/Advertising.list, tag=(Ads and Privacy and Hijacking )Guard, force-policy=Guard, update-interval=172800, opt-parser=false, enabled=true

# Streaming 国际流媒体服务
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Streaming.list, tag=🎞Streaming, force-policy=Streaming, update-interval=86400, opt-parser=true, enabled=true

# StreamingSE 中国流媒体服务(面向海外版本)
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/StreamingSE.list, tag=🎞StreamingSE, force-policy=StreamingSE, update-interval=86400, opt-parser=true, enabled=true

# Global 全球加速
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Global.list, tag=🇺🇳Global, force-policy=🇺🇳Global, update-interval=86400, opt-parser=true, enabled=true

# China 中国直连
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/China.list, tag=🇨🇳China, force-policy=🇨🇳Inbound, update-interval=86400, opt-parser=true, enabled=true

[rewrite_remote]
# 复写优先级：从上到下

# 知乎puls
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/zhihu/zhihu_plus.qxrewrite, tag=知乎助手_去广告及体验增强, update-interval=86400, opt-parser=false, enabled=true
# 哔哩哔哩puls
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/bilibili/bilibili_plus.qxrewrite, tag=哔哩哔哩_去广告, update-interval=86400, opt-parser=false, enabled=true
# 脚本去广告
https://raw.githubusercontent.com/zwf234/rules/master/QuantumultX/tailadv.conf, tag=AdsScript, update-interval=172800, opt-parser=false, enabled=true
# 去广告复写不要关
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/QuantumultX/Advertising/Advertising.conf, tag=AdsRewrite, update-interval=172800, opt-parser=false, enabled=true
# 获取cookies 获取完就关闭，不然占用系统资源
https://raw.githubusercontent.com/zwf234/rules/master/getCookie.conf, tag=HeartCookies, update-interval=172800, opt-parser=false, enabled=false
# tiktok日本解锁
https://raw.githubusercontent.com/zwf234/rules/master/TikTok/JP.conf, tag=Tiktok JP, update-interval=172800, opt-parser=false, enabled=true
# 会员复写集合
https://raw.githubusercontent.com/zwf234/rules/master/QuantumultX/qxrules.conf, tag=AddRewrite, update-interval=172800, opt-parser=false, enabled=true
# sub-store(本地化订阅)浏览器访问https://sub-store.vercel.app/#/
https://raw.githubusercontent.com/harisonkhlil/QurakJkaer-s-conf/main/sub-store.conf, tag=sub-store, update-interval=172800, opt-parser=false, enabled=true
# boxjs(商店版)
https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.quanx.conf, tag=Boxjs, update-interval=172800, opt-parser=false, enabled=true
# Google安全搜索关闭
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Turn-Off-Google-Safesearch.conf, tag=Google Search, update-interval=172800, opt-parser=false, enabled=true
# 神机复写
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/General.conf, tag=🔀General, update-interval=86400, enabled=true
# Block YouTube Ads（会员一定要关了）
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/YouTubeAds.conf, tag=🛡YouTube Premium 禁用, update-interval=86400, opt-parser=false, enabled=true

[server_local]

# 只有 obfs=http, obfs=ws, obfs=ws, obfs=wss 可以有可选的「obfs-uri」字段。
# wss 中的 obfs-host 参数将用于 TLS 握手和 HTTP 头主机字段，如果没有为 wss 设置 obfs-host，则将使用服务器地址。
# 目前不支持 VMess 和 Trojan 的 UDP relay。
# 当使用 obfs=ws 和 obfs=wss 时，服务器端可以通过带有 mux=0 的 v2ray-plugin 或 v2ray-core 进行部署。
# obfs plugin tls1.2 ticket auth 比 tls1.2 ticket fastauth 和 obfs tls 多一个 RTT，你最好使用 tls1.2 ticket fastauth。
# chacha20-ietf-poly1305 和 chacha20-poly1305 在 VMess 配置中具有相同的效果。
#
# 可选字段 tls13 仅用于：shadowsocks obfs=wss / vmess obfs=over-tls and obfs=wss / http over-tls=true / trojan over-tls=true
# [server_local] 完整示例请查看「示例」

[filter_local]
# 知乎去广告，以下规则请放置在filter_local最顶部
IP-CIDR,118.89.204.198/32,REJECT
IP6-CIDR,2402:4e00:1200:ed00:0:9089:6dac:96b6/128,REJECT
HOST,118.89.204.198,REJECT
# 知乎去广告，以下规则的位置越前方越好
HOST,mqtt.zhihu.com,reject
HOST,sugar.zhihu.com,reject
HOST,appcloud2.in.zhihu.com,REJECT
USER-AGENT,AVOS*,REJECT
# 奇心科技
host-suffix,bbs.qxzy.top,🇺🇳Global
# Local Area Network 局域网
host-suffix, local, direct
ip-cidr, 192.168.0.0/16, direct
ip-cidr, 10.0.0.0/8, direct
ip-cidr, 172.16.0.0/12, direct
ip-cidr, 127.0.0.0/8, direct
ip-cidr, 100.64.0.0/10, direct
ip-cidr, 224.0.0.0/4, direct
ip6-cidr, fe80::/10, direct
# 避免迅雷版权问题
host, hub5idx.v6.shub.sandai.net,reject
host, hub5emu.v6.shub.sandai.net,reject
host, hub5btmain.v6.shub.sandai.net,reject
# GeoIP China
geoip, cn, 🇨🇳Inbound
# 绕过企业证书过期
host, ocsp.apple.com, reject
#YouTube 去底部广告
host-suffix, ehg-youtube.hitbox.com, reject
final, Final

[rewrite_local]
# [rewrite_local] 完整示例请查看「示例」

[task_local]
# 自己装自己需要的脚本，要把圈X看作代理工具而不是跑脚本的工具
# $task.fetch() 组成一个 HTTP 请求并处理响应，只支持 text body。如果您想要 serial requests 而不是 current requests，可以将 $task.fetch() 嵌入到另一个 $task.fetch() 的完成处理程序中。
#
# 脚本应保存在本地「我的 iPhone - Quantumult X - Scripts」或「iCloud Drive - Quantumult X - Scripts」中。示例：https://github.com/crossutility/Quantumult-X/blob/master/sample-task.js
#
# 默认的 HTTP 请求超时是 10 秒。
#
# 支持 5 或 6 个 cron 字段，不包括命令字段。
#

# [task_local] 完整示例请查看「示例」

[http_backend]
https://raw.githubusercontent.com/chavyleung/scripts/master/chavy.box.js, tag=BoxJs, path=^/, img-url=https://qxzy.top/rules/QuantumultX/img/box.png, enabled=true
#BoxJs改为使用http backend方式，访问地址改为http://127.0.0.1:9999，更新配置后请长按风车-更新，然后重启代理
#
# 部署一个本地 HTTP 服务器，并使用 JavaScript 进行数据处理。
# 输入变量为：$reqeust.url、$reqeust.path、$reqeust.headers、$reqeust.body。
# 使用 $done 输出像 $done({status:"HTTP/1.1 200 OK"}, headers:{}, body:"here is a string") 这样的返回响应。
# 此外，您还可以使用签名或任何其他验证方法来验证请求是否合法。
# 部署后您应该通过 http://127.0.0.1:9999/your-path/your-api/. 进行访问。服务器默认监听端口为 9999，您可以在UI中进行更改。
#
# [http_backend] 完整示例请查看「示例」

[mitm]
# 自己生成自己的ca密码和p12安全有保障

#
# 只有「hostname」中的 TLS SNI 或目标地址将被 MitM 处理。
#
# 默认情况下，当为 HTTPS 请求启用 MitM 时，Quantumult X 会从原站点获取证书（证书会被缓存），保留大部分需要的原始证书信息，并使用 MitM 的 root CA 重新签名，这是推荐的（也是比较兼容的）MitM 证书创建方式。
#
# 偶尔有些用户喜欢调试 HTTPS 请求，其域名不存在，所以原证书根本不存在。当参数 simple_cert_hostname 出现的时候。其 TLS SNI 名称在 simple_cert_hostname(及 hostname) 中的 HTTPS 请求将使用纯本地生成的 MitM 证书。
#
# 注意！！！您应该始终保护您的 CA 密码和 p12 的私密性。
#
;passphrase =
;p12 =
skip_validating_cert = true
;force_sni_domain_name = false
;simple_cert_hostname = non-existed-domain.com, *.non-connected-domain.com
;hostname = *.googlevideo.com
